#include<stdio.h>
#include<pthread.h>

int count =1;
pthread_mutex_t mutex;

void *ptinteven(void *arg)
{
    while(count<100)
    {
        pthread_mutex_lock(&mutex);
        if(count%2 ==0)
        {
            printf("%d ",count);
            count++;
            pthread_mutex_unlock(&mutex);
        }
        else
            pthread_mutex_unlock(&mutex);
    }
}

void *printodd(void *arg)
{
    while(count<100)
    {
        pthread_mutex_lock(&mutex);
        if(count%2 !=0)
        {
            printf("%d ",count);
            count++;
            pthread_mutex_unlock(&mutex);
        }
        else
            pthread_mutex_unlock(&mutex);
    }
}

int main()
{
    pthread_t t1,t2;
    
    pthread_mutex_init(&mutex,0);
    pthread_create(&t1,0,&ptinteven,NULL);
    pthread_create(&t2,0,&printodd,NULL);
    
    pthread_join(t1,0);
    pthread_join(t2,0);
    
    pthread_mutex_destroy(&mutex);
    return 0;
}
