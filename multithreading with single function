
#include<pthread.h>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
void * trythis(void *arg);
pthread_t tid[2];
int counter;
pthread_mutex_t lock;


int main()
{
	int i=0;
	int error;
    const int argment=10;
	if(pthread_mutex_init(&lock,NULL)!=0)
	{
	    printf("mutext init failed");
	//	printf(“mutex initiation failed”);
		return 1;
	}
	while(i<2)
	{
		error = pthread_create(&tid[i],0,&trythis,NULL);
		if(error!=0)
		printf("thread cannt be created %s",strerror(error));
		i++;

	}
	printf("threads count %d\n",i);
	pthread_join(tid[0],NULL);
	pthread_join(tid[1],NULL);
	pthread_mutex_destroy(&lock);
 	return 0;
}

void * trythis(void *arg)
{
	pthread_mutex_lock(&lock);
	
	unsigned long i=0;
	counter += 1;
	printf("job %d has started\n ",counter);
	for(i=0;i<10;i++)
	;
	printf("job has finished %d\n",counter);
	
	pthread_mutex_unlock(&lock);
	
	return NULL;
}
